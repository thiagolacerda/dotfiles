#!/usr/bin/env bash

function dirsize() {
    du -shx * .[a-zA-Z0-9_]* 2> /dev/null | egrep '^ *[0-9.]*[MG]' | sort -n > /tmp/list
    egrep '^ *[0-9.]*M' /tmp/list
    egrep '^ *[0-9.]*G' /tmp/list
    rm -rf /tmp/list
}

# Simple calculator -> usage: calc <equation>
function calc() {
    if which bc &>/dev/null; then
        echo "scale=3; $*" | bc -l
    else
        awk "BEGIN { print $* }"
    fi
}

# Start an HTTP server from a directory, optionally specifying the port
function server() {
    local port="${1:-8000}";
    sleep 1 && open "http://localhost:${port}/" &
    # Set the default Content-Type to `text/plain` instead of `application/octet-stream`
    # And serve everything as UTF-8 (although not technically correct, this doesnâ€™t break anything for binary files)
    python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port";
}

# `s` with no arguments opens the current directory in Sublime Text, otherwise
# opens the given location
function s() {
    if [ $# -eq 0 ]; then
        subl .;
    else
        subl "$@";
    fi;
}

# usage: remindme <time> <text>
function remindme() {
    if [[ "$#" -lt 2 ]]; then
        echo -e "Usage: remindme [time] '[message]'"
        echo -e "Example: remindme 50s 'check mail'"
        echo -e "Example: remindme 10m 'go to class'"
    fi
    if [[ "$#" -gt 2 ]]; then
        echo -e "Usage: remindme [time] '[message]'"
        echo -e "Example: remindme 50s 'check mail'"
        echo -e "Example: remindme 10m 'go to class'"
    fi
    if [[ "$#" == 2 ]]; then
        sleep $1 && notify-send -t 15000 "$2" & echo 'Reminder set'
    fi
}

function lowercase() {
    for file ; do
        filename=${file##*/}
        case "$filename" in
            */* ) dirname==${file%/*} ;;
            * ) dirname=.;;
        esac
        nf=$(echo $filename | tr A-Z a-z)
        newname="${dirname}/${nf}"
        if [[ "$nf" != "$filename" ]]; then
            mv "$file" "$newname"
            echo "lowercase: $file --> $newname"
        else
            echo "lowercase: $file not changed."
        fi
    done
}
